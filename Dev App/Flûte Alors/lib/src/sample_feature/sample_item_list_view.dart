import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

import '../settings/settings_view.dart';
import 'sample_item.dart';
import 'sample_item_details_view.dart';

/// Displays a list of SampleItems.
class SampleItemListView extends StatelessWidget {
  const SampleItemListView({
    Key? key,
    this.items = const [
      SampleItem(0, 2),
      SampleItem(0, 2),
      SampleItem(1, 4),
      SampleItem(2, 0),
      SampleItem(3, 0),
      SampleItem(4, 0),
      SampleItem(5, 0),
      SampleItem(6, 0),
      SampleItem(7, 0),
      SampleItem(8, 0),
      SampleItem(9, 0),
      SampleItem(10, 0),
      SampleItem(11, 0),
      SampleItem(12, 0),
      SampleItem(13, 0),
      SampleItem(14, 0),
      SampleItem(15, 0),
      SampleItem(16, 0),
      SampleItem(17, 0),
      SampleItem(18, 0),
      SampleItem(19, 0),
      SampleItem(20, 0),
      SampleItem(21, 0),
      SampleItem(22, 0),
      SampleItem(23, 0),
      SampleItem(24, 0),
      SampleItem(25, 0),
      SampleItem(26, 0),
      SampleItem(27, 0),
      SampleItem(28, 0),
      SampleItem(29, 0),
      SampleItem(30, 0),
      SampleItem(31, 0),
      SampleItem(32, 0),
      SampleItem(33, 0),
      SampleItem(34, 0),
      SampleItem(35, 0),
      SampleItem(36, 0),
      SampleItem(37, 0),
      SampleItem(38, 0),
      SampleItem(39, 0),
      SampleItem(40, 0),
      SampleItem(41, 0),
      SampleItem(42, 0),
      SampleItem(43, 0),
      SampleItem(44, 0),
      SampleItem(45, 0),
      SampleItem(46, 0),
      SampleItem(47, 0),
      SampleItem(48, 0),
      SampleItem(49, 0),
      SampleItem(50, 0),
      SampleItem(51, 0),
      SampleItem(52, 0),
      SampleItem(53, 0),
      SampleItem(54, 0),
      SampleItem(55, 0),
      SampleItem(56, 0),
      SampleItem(57, 0),
      SampleItem(58, 0),
      SampleItem(59, 0),
      SampleItem(60, 0),
      SampleItem(61, 0),
      SampleItem(62, 0),
      SampleItem(63, 0),
      SampleItem(64, 0),
      SampleItem(65, 0),
      SampleItem(66, 0),
      SampleItem(67, 0),
      SampleItem(68, 0),
      SampleItem(69, 0),
      SampleItem(70, 0),
      SampleItem(71, 0),
      SampleItem(72, 0),
      SampleItem(73, 0),
      SampleItem(74, 0),
      SampleItem(75, 0),
      SampleItem(76, 0),
      SampleItem(77, 0),
      SampleItem(78, 0),
      SampleItem(79, 0),
      SampleItem(80, 0),
      SampleItem(81, 0),
      SampleItem(82, 0),
      SampleItem(83, 0),
      SampleItem(84, 0),
      SampleItem(85, 0),
      SampleItem(86, 0),
      SampleItem(87, 0),
      SampleItem(88, 0),
      SampleItem(89, 0),
      SampleItem(90, 0),
      SampleItem(91, 0),
      SampleItem(92, 0),
      SampleItem(93, 0),
      SampleItem(94, 0),
      SampleItem(95, 0),
      SampleItem(96, 0),
      SampleItem(97, 0),
      SampleItem(98, 0),
      SampleItem(99, 0),
      SampleItem(100, 0),
      SampleItem(101, 0),
      SampleItem(102, 0),
      SampleItem(103, 0),
      SampleItem(104, 0),
      SampleItem(105, 0),
      SampleItem(106, 0),
      SampleItem(107, 0),
      SampleItem(108, 0),
      SampleItem(109, 0),
      SampleItem(110, 0),
      SampleItem(111, 0),
      SampleItem(112, 0),
      SampleItem(113, 0),
      SampleItem(114, 0),
      SampleItem(115, 0),
      SampleItem(116, 0),
      SampleItem(117, 0),
      SampleItem(118, 0),
      SampleItem(119, 0),
      SampleItem(120, 0),
      SampleItem(121, 0),
      SampleItem(122, 0),
      SampleItem(123, 0),
      SampleItem(124, 0),
      SampleItem(125, 0),
      SampleItem(126, 0),
      SampleItem(127, 1),
      SampleItem(128, 0),
      SampleItem(129, 0),
      SampleItem(130, 0),
      SampleItem(131, 0),
      SampleItem(132, 0),
      SampleItem(133, 0),
      SampleItem(134, 0),
      SampleItem(135, 0),
      SampleItem(136, 0),
      SampleItem(137, 0),
      SampleItem(138, 0),
      SampleItem(139, 0),
      SampleItem(140, 0),
      SampleItem(141, 0),
      SampleItem(142, 0),
      SampleItem(143, 0),
      SampleItem(144, 0),
      SampleItem(145, 0),
      SampleItem(146, 0),
      SampleItem(147, 0),
      SampleItem(148, 0),
      SampleItem(149, 0),
      SampleItem(150, 0),
      SampleItem(151, 0),
      SampleItem(152, 0),
      SampleItem(153, 0),
      SampleItem(154, 0),
      SampleItem(155, 0),
      SampleItem(156, 0),
      SampleItem(157, 0),
      SampleItem(158, 0),
      SampleItem(159, 0),
      SampleItem(160, 0),
      SampleItem(161, 0),
      SampleItem(162, 0),
      SampleItem(163, 0),
      SampleItem(164, 0),
      SampleItem(165, 0),
      SampleItem(166, 0),
      SampleItem(167, 0),
      SampleItem(168, 0),
      SampleItem(169, 0),
      SampleItem(170, 0),
      SampleItem(171, 0),
      SampleItem(172, 0),
      SampleItem(173, 0),
      SampleItem(174, 0),
      SampleItem(175, 0),
      SampleItem(176, 0),
      SampleItem(177, 0),
      SampleItem(178, 0),
      SampleItem(179, 0),
      SampleItem(180, 0),
      SampleItem(181, 0),
      SampleItem(182, 0),
      SampleItem(183, 0),
      SampleItem(184, 0),
      SampleItem(185, 0),
      SampleItem(186, 0),
      SampleItem(187, 0),
      SampleItem(188, 0),
      SampleItem(189, 0),
      SampleItem(190, 0),
      SampleItem(191, 0),
      SampleItem(192, 0),
      SampleItem(193, 0),
      SampleItem(194, 0),
      SampleItem(195, 0),
      SampleItem(196, 0),
      SampleItem(197, 0),
      SampleItem(198, 0),
      SampleItem(199, 0),
      SampleItem(201, 0),
      SampleItem(202, 0),
      SampleItem(203, 0),
      SampleItem(204, 0),
      SampleItem(205, 0),
      SampleItem(206, 0),
      SampleItem(207, 0),
      SampleItem(208, 0),
      SampleItem(209, 0),
      SampleItem(210, 0),
      SampleItem(211, 0),
      SampleItem(212, 0),
      SampleItem(213, 0),
      SampleItem(214, 0),
      SampleItem(215, 0),
      SampleItem(216, 0),
      SampleItem(217, 0),
      SampleItem(218, 0),
      SampleItem(219, 0),
      SampleItem(220, 0),
      SampleItem(221, 0),
      SampleItem(222, 0),
      SampleItem(223, 0),
      SampleItem(224, 0),
      SampleItem(225, 0),
      SampleItem(226, 0),
      SampleItem(227, 0),
      SampleItem(228, 0),
      SampleItem(229, 0),
      SampleItem(230, 0),
      SampleItem(231, 0),
      SampleItem(232, 0),
      SampleItem(233, 0),
      SampleItem(234, 0),
      SampleItem(235, 0),
      SampleItem(236, 0),
      SampleItem(237, 0),
      SampleItem(238, 0),
      SampleItem(239, 0),
      SampleItem(240, 0),
      SampleItem(241, 0),
      SampleItem(242, 0),
      SampleItem(243, 0),
      SampleItem(244, 0),
      SampleItem(245, 0),
      SampleItem(246, 0),
      SampleItem(247, 0),
      SampleItem(248, 0),
      SampleItem(249, 0),
      SampleItem(250, 0),
      SampleItem(251, 0),
      SampleItem(252, 0),
      SampleItem(253, 0),
      SampleItem(254, 0),
      SampleItem(255, 0)
    ],
  }) : super(key: key);

  static const routeName = '/';

  final List<SampleItem> items;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Flutter'),
        actions: [
          IconButton(
            icon: const Icon(Icons.settings),
            onPressed: () {
              // Navigate to the settings page. If the user leaves and returns
              // to the app after it has been killed while running in the
              // background, the navigation stack is restored.
              Navigator.restorablePushNamed(context, SettingsView.routeName);
            },
          ),
        ],
      ),
      body: ListView.builder(
        restorationId: 'sampleItemListView',
        itemCount: kIsWeb ? items.length + 1 : items.length,
        itemBuilder: (BuildContext context, int index) {
          if (items.length == index) {
            return ListTile(
                title: const Text('flag'),
                leading: const CircleAvatar(
                  // Display the Flutter Logo image asset.
                  foregroundImage: AssetImage('assets/images/flutter_logo.png'),
                ),
                onTap: () {
                  Navigator.restorablePushNamed(
                    context,
                    SampleItemDetailView.routeName,
                  );
                });
          } else {
            if (items[index].type == 0) {
              final item = items[index];

              return ListTile(
                  title: Text('SampleItem ${item.id}'),
                  leading: const CircleAvatar(
                    foregroundImage:
                        AssetImage('assets/images/flutter_logo.png'),
                  ),
                  onTap: () {
                    Navigator.restorablePushNamed(
                      context,
                      SampleItemDetailsView.routeName,
                    );
                  });
            } else {
              return ListTile(
                  title: Text('SampleIpem ${items[index].id}'),
                  leading: const CircleAvatar(
                    foregroundImage:
                        AssetImage('assets/images/flutter_logo.png'),
                  ),
                  onTap: () {
                    Navigator.restorablePushNamed(
                        context, IpItemDetailsView.routeName,
                        arguments: items[index].type);
                  });
            }
          }
        },
      ),
    );
  }
}
